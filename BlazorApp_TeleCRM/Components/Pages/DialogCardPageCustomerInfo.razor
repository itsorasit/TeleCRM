@page "/DialogCardPageCustomerInfo/{OrderID}"
@using System.ComponentModel.DataAnnotations
@using BlazorApp_TeleCRM.Data
@using static BlazorApp_TeleCRM.Components.Pages.Job.Job
@inject IConfiguration Configuration
@inject Radzen.DialogService dialogService
@inject HttpClient Http

<RadzenStack Gap="1rem" Orientation="Orientation.Vertical" JustifyContent="JustifyContent.SpaceBetween" Style="height: 100%;">
    <RadzenStack>
        <RadzenRow>
            <RadzenColumn Size="6" SizeMD="6" class="rz-p-4 rz-border-radius-1" Style="border: var(--rz-grid-cell-border)">
                <RadzenRow Gap="0">
                    <RadzenColumn>
                        <RadzenText TextStyle="TextStyle.Subtitle1">ข้อมูลลูกค้า</RadzenText>
                    </RadzenColumn>
                    <RadzenColumn>
                        <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-color-primary">ผลตอบรับ</RadzenText>
                        <RadzenBadge BadgeStyle="BadgeStyle.Success" Text="สั่งสินค้า" />
                    </RadzenColumn>
                </RadzenRow>

                 <RadzenRow Gap="0">

                    <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center">
                        <RadzenImage Path="/user/customer-service.png" Style="margin-top:10px; width: 50px; height: 50px; border-radius: 50%;" />
                        <img width="75px" src="data:image/png;base64,@qrCodeImage" style="margin-top:10px;" alt="QR Code" />
                        <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center">
                            <RadzenStack Gap="0">
                                <RadzenText TextStyle="TextStyle.Overline" Style="color: var(--rz-text-tertiary-color);">ชื่อลูกค้า-นามสกุล</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1" class="rz-text-truncate"><b>@order.Customer_FullName</b></RadzenText>

                                <RadzenText TextStyle="TextStyle.Overline" Style="color: var(--rz-text-tertiary-color);">เบอร์ติดต่อ</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1"><b><a href="tel:+66850931002"><RadzenIcon Icon="smartphone" />085-0931-002</a></b></RadzenText>

                                <RadzenText TextStyle="TextStyle.Overline" Style="color: var(--rz-text-tertiary-color);">ที่อยู่</RadzenText>
                                <RadzenText TextStyle="TextStyle.Caption"><b>@order.Customer_Address</b></RadzenText>
                            </RadzenStack>
                        </RadzenStack>
                    </RadzenStack>

                 </RadzenRow>

               
            </RadzenColumn>
            <RadzenColumn Size="6" SizeMD="6" class="rz-p-4 rz-border-radius-1" Style="border: var(--rz-grid-cell-border)">
                <RadzenText TextStyle="TextStyle.Subtitle1">ผู้ติดต่อ</RadzenText>
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
                    <RadzenImage Path="/user/staff1.jpg" Style="width: 50px;" AlternateText="@order.Contact_By" />
                    <RadzenStack Gap="0" class="rz-text-truncate">
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-mt-2 rz-my-0" Style="color: var(--rz-text-tertiary-color);">พนักงาน</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" class="rz-text-truncate"><b>@order.Contact_By</b></RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-mt-4 rz-mb-0" Style="color: var(--rz-text-tertiary-color);">วันที่ติดต่อ</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" class="rz-text-truncate"><b>@order.Contact_Date</b></RadzenText>

                        <RadzenText TextStyle="TextStyle.Overline" class="rz-mt-4 rz-mb-0" Style="color: var(--rz-text-tertiary-color);">เบอร์ที่ใช้โทร</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" class="rz-text-truncate"><b>-</b></RadzenText>
                    </RadzenStack>
                </RadzenStack>
            </RadzenColumn>

        </RadzenRow>

        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center">
            <RadzenText TextStyle="TextStyle.Subtitle1" class="rz-m-0">ประวัติการติดต่อ</RadzenText>
        </RadzenStack>
        <RadzenDataGrid AllowFiltering="true" AllowPaging="true" AllowSorting="true"
                        FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                        @bind-Value=@selectedCustomer
                        Data="@forecasts" ColumnWidth="150px" SelectionMode="DataGridSelectionMode.Single" Density="Density.Compact"
                        PagerPosition="PagerPosition.Bottom"
                        AllowAlternatingRows="false">
            <Columns>
                <RadzenDataGridColumn TItem="JobDataList" Property="Contact_By" Width="150px" Title="ผู้ติดต่อ" />
                <RadzenDataGridColumn TItem="JobDataList" Property="Contact_Date" Width="150px" Title="วันที่ติดต่อลูกค้า" />
                <RadzenDataGridColumn TItem="JobDataList" Property="Last_Contact_By" Width="150px" Title="ผู้ติดต่อครั้งก่อน" />
                <RadzenDataGridColumn TItem="JobDataList" Property="Last_Contact_Date" Width="150px" Title="วันที่ติดต่อครั้งก่อน" />
                <RadzenDataGridColumn TItem="JobDataList" Property="Last_Contact_Action" Width="120px" Title="ผลตอบรับครั้งก่อน" />
                <RadzenDataGridColumn TItem="JobDataList" Property="Remark" Width="200px" Title="หมายเหตุ" />
            </Columns>
        </RadzenDataGrid>
    </RadzenStack>

</RadzenStack>
@code {
    [Parameter] public int OrderID { get; set; }
    Order order;
    private IEnumerable<JobDataList> forecasts;
    IList<JobDataList> selectedCustomer;

    private RadzenTemplateForm<UpdateJob> form;
    private UpdateJob Model = new UpdateJob();
    IEnumerable<string> StatusData;

    private string qrCodeImage;


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        Order o = new Order();
        o.JobID = 1;

 

        o.Customer_FullName = "คุณสมศรี มั่งมี";
        o.Customer_Phone = "056-0351-334";
        o.Customer_Address = "587-589/7-9 ถ. รามอินทรา แขวงคันนายาว เขตคันนายาว กรุงเทพมหานคร 10230";



        o.Contact_By = "สรายุทธ";
        o.Contact_Date = DateTime.Now;

        order = o;

        var baseApiUrl = Configuration["ApiSettings:BaseApiUrl"];
        // Use the BaseApiUrl to call the API
        var _forecasts = await Http.GetFromJsonAsync<IEnumerable<JobDataList>>($"{baseApiUrl}/api/JobDataList");

        forecasts = _forecasts.Take(5).ToList();
        selectedCustomer = new List<JobDataList>() { forecasts.FirstOrDefault() };

        StatusData = new List<string>
{
    "ตอบรับ",         // Accepted
    "ติดต่อไม่ได้",   // Unable to Contact
    "ปฎิเสธ",         // Rejected
    "สั่งสินค้า"      // Ordered Products
};


    
        string phoneNumber = "tel:+66850931002";

        // สร้าง QR Code
        using (var qrGenerator = new QRCoder.QRCodeGenerator())
        {
            var qrCodeData = qrGenerator.CreateQrCode(phoneNumber, QRCoder.QRCodeGenerator.ECCLevel.Q);
            var qrCode = new QRCoder.PngByteQRCode(qrCodeData);
            var qrCodeBytes = qrCode.GetGraphic(20);

            // แปลงเป็น base64 เพื่อแสดงเป็นรูปภาพใน img tag
            qrCodeImage = Convert.ToBase64String(qrCodeBytes);
        }



    }

    private async Task OnSubmit()
    {

    }

    private void OnInvalidSubmit()
    {

    }


    public class UpdateJob
    {
        [Required(ErrorMessage = "เลือกสถานะ")]
        public string status { get; set; }
        public string sale_order { get; set; }
        public string remark { get; set; }
    }


    private class Order
    {
        public int? JobID { get; set; }
        public DateTime? Date { get; set; }
        public int? TemperatureC { get; set; }
        public string Summary { get; set; }
        public string Customer_FullName { get; set; }
        public string Customer_Phone { get; set; }
        public string Customer_Address { get; set; }
        public string Customer_Action { get; set; }
        public string Contact_By { get; set; }
        public DateTime? Contact_Date { get; set; }
        public string Last_Contact_By { get; set; }
        public DateTime? Last_Contact_Date { get; set; }
        public string Last_Contact_Action { get; set; }
        public string Remark { get; set; }
    }




}
