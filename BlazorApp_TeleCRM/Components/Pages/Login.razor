@page "/login"
@using BlazorApp_TeleCRM.Components.Layout
@using System.ComponentModel.DataAnnotations
@inject IJSRuntime JSRuntime
@layout LoginLayout
@inject NavigationManager Navigation
@inject NotificationService NotificationService

<RadzenStack class="rz-p-0 rz-p-md-12">
    <RadzenCard Style="width: 600px;">
        <RadzenHeading Size="H1">Login</RadzenHeading>
        <RadzenTemplateForm @ref="form" TItem="LoginModel" Data="@loginModel" Submit="@OnSubmit" InvalidSubmit="@OnInvalidSubmit">
            <RadzenFieldset Text="Login Information">
                <RadzenStack Gap="2rem" class="rz-p-4 rz-p-md-12">

                    <!-- Username Field -->
                    <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                        <RadzenColumn Size="12" SizeMD="4" class="rz-text-align-start rz-text-align-md-end">
                            <RadzenLabel Text="Username" Component="Username" />
                        </RadzenColumn>
                        <RadzenColumn Size="12" SizeMD="8">
                            <RadzenTextBox style="display: block" Name="Username" Placeholder="Enter username..." @bind-Value="@loginModel.Username" class="w-100" />
                            <RadzenDataAnnotationValidator Component="Username" Popup="@popup" Style="position: absolute" />
                        </RadzenColumn>
                    </RadzenRow>

                    <!-- Password Field -->
                    <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                        <RadzenColumn Size="12" SizeMD="4" class="rz-text-align-start rz-text-align-md-end">
                            <RadzenLabel Text="Password" Component="Password" />
                        </RadzenColumn>
                        <RadzenColumn Size="12" SizeMD="8">
                            <RadzenPassword style="display: block" Name="Password" Placeholder="Enter password..." @bind-Value="@loginModel.Password" class="w-100" aria-label="enter password" />
                            <RadzenDataAnnotationValidator Component="Password" Popup="@popup" Style="position: absolute" />
                        </RadzenColumn>
                    </RadzenRow>

                    <!-- Submit Button -->
                    <RadzenRow AlignItems="AlignItems.Center">
                        <RadzenColumn Size="12" Offset="0" SizeMD="8" OffsetMD="4">
                            <RadzenButton ButtonType="ButtonType.Submit" Text="Login" Style="margin-top: 5px;" />
                        </RadzenColumn>
                    </RadzenRow>

                </RadzenStack>
            </RadzenFieldset>
        </RadzenTemplateForm>
    </RadzenCard>
</RadzenStack>

@code {
    private RadzenTemplateForm<LoginModel> form;
    private LoginModel loginModel = new LoginModel();
    private bool popup = true;

    private async Task OnSubmit()
    {
        if (loginModel.Username == "admin" && loginModel.Password == "password")
        {
            // Save login status in local storage
            await JSRuntime.InvokeVoidAsync("localStorage.setItem", "isLoggedIn", "true");

            NotificationService.Notify(NotificationSeverity.Success, "Login successful", "Welcome back, admin!");
            Navigation.NavigateTo("/dashboard");
        }
        else
        {
            NotificationService.Notify(NotificationSeverity.Error, "Login failed", "Invalid username or password.");
        }
    }

    private void OnInvalidSubmit()
    {
        NotificationService.Notify(NotificationSeverity.Warning, "Form invalid", "Please check the form for errors.");
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Username is required")]
        public string Username { get; set; }

        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; }
    }
}