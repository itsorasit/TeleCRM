@page "/overview-report"
@using BlazorApp_TeleCRM.Models
@using MySql.Data.MySqlClient
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject IConfiguration Configuration
@inject MySqlConnection MySqlConnection

<RadzenStack class="rz-p-0 rz-p-md-8">

    <RadzenCardGroup Responsive="@responsive">
       
        <RadzenCard Variant="@variant">
            <RadzenStack JustifyContent="JustifyContent.SpaceBetween" Gap="1rem">
                <RadzenLabel Text="วันที่" />
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.SpaceBetween">
                    <RadzenDatePicker @bind-Value="@fdate" DateFormat="MM/dd/yyyy" Name="FDatePickerDateOnlyType" class="w-100" />
                    <RadzenLabel Text="ถึง" Component="DropDownBindValue" />
                    <RadzenDatePicker @bind-Value="@ldate" DateFormat="MM/dd/yyyy" Name="LDatePickerDateOnlyType" class="w-100" />
                </RadzenStack>
            </RadzenStack>
        </RadzenCard>

        <RadzenCard Variant="@variant">
            <RadzenStack JustifyContent="JustifyContent.SpaceBetween" Gap="1rem">
                <RadzenLabel Text="Touch Point" />
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.SpaceBetween">
                    <RadzenDropDown @bind-Value=@touch_point Multiple=true AllowClear=true Chips=true
                                    Data=@datachannel Name="touch_point" class="w-100" />
                </RadzenStack>
             </RadzenStack>
        </RadzenCard>
       <RadzenCard Variant="@variant">
            <RadzenStack JustifyContent="JustifyContent.SpaceBetween" Gap="1rem">
                <RadzenLabel Text="พนักงาน"  />
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.SpaceBetween">
                    <RadzenDropDown @bind-Value=@staff_values Data=@users_staff Name="DropDownMultipleMaxLabels"
                                    TextProperty="firstname" ValueProperty="username" Chips=true
                                    Multiple=true AllowClear=true class="w-100" />
                </RadzenStack>
            </RadzenStack>
        </RadzenCard> 
    </RadzenCardGroup>
</RadzenStack>

@code {
    bool responsive = true;

    DateTime fdate = DateTime.Now;
    DateTime ldate = DateTime.Now;


    IEnumerable<string> datachannel;

    Variant variant = Variant.Filled;


    // string touch_point = "เลือกทั้งหมด";
    List<string> touch_point = new List<string> { "Up-Sale", "Re-Sale", "ลูกค้าขุด", "Cross-Sale" };

    List<string> staff_values = new List<string>();
    List<User> users_staff = new List<User>();





    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        datachannel = data_channels;
        await LoadUsersAsync();

        foreach (var i in users_staff)
        {
            staff_values.Add(i.firstname.ToString());
        }


    }
    private static readonly string[] data_channels = new[]
      {
        "Up-Sale", "Re-Sale","ลูกค้าขุด","Cross-Sale"
      };

    private async Task LoadUsersAsync()
    {
        try
        {
            await MySqlConnection.OpenAsync();

            string query = "SELECT username, firstname FROM mas_users WHERE organization = '000500'";
            using var command = new MySqlCommand(query, MySqlConnection);

            using var reader = await command.ExecuteReaderAsync();
            while (await reader.ReadAsync())
            {
                users_staff.Add(new User
                {
                        username = reader["username"].ToString(),
                        firstname = reader["firstname"].ToString()
                    });
            }
        }
       catch (Exception ex)
        {
            Console.WriteLine($"Error fetching users: {ex.Message}");
        }
        finally
        {
            await MySqlConnection.CloseAsync();
        }
    }


}
